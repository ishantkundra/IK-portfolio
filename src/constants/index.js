import ishantImage from "../assets/ishant.jpg";
import {
    resume,
    python,
    c,
    cpp,
    mysql,
    postgresql,
    flask,
    tensorflow,
    pytorch,
    keras,
    d3,
    chart,
    opencv,
    nltk,
    spacy,
    javascript,
    html,
    css,
    reactjs,
    java,
    nodejs,
    mongodb,
    git,
    docker,
    guiproj,
    backend,
    creator,
    web,
    aiml,
    neurostockviz,
    canbusvehiclediagnostictool,
    aiplayspokemonred,
    clip,
    greenhouse,
    tamuchatbot,
    limeandshap,
    biasdetection,
    skhedule,
    yelp,
    pokemongoandbaseball,
    uta,
} from "../assets";

import jio from "../assets/company/jio.png";
import impetus from "../assets/company/impetus.png";
import cartesian from "../assets/company/cartesian.png";

export const navLinks = [{
        id: "about",
        title: "About",
    },
    {
        id: "work",
        title: "Work",
    },
    {
        id: "contact",
        title: "Contact",
    },
];

const services = [{
        title: "AI/ML Engineer",
        icon: aiml,
    },
    {
        title: "Full-stack Developer",
        icon: creator,
    },
    {
        title: "Backend Developer",
        icon: backend,
    },
    {
        title: "Frontend Developer",
        icon: web,
    },
];

const rm = {
    icon: ishantImage,
    cv: resume,
}

const technologies = [
    { name: "Python", icon: python },
    { name: "Java", icon: java },
    { name: "JavaScript", icon: javascript },
    { name: "React JS", icon: reactjs },
    { name: "HTML 5", icon: html },
    { name: "CSS 3", icon: css },
    { name: "Node JS", icon: nodejs },
    { name: "MongoDB", icon: mongodb },
    { name: "PostgreSQL", icon: postgresql }, 
    { name: "MySQL", icon: mysql },
    { name: "C", icon: c },
    { name: "C++", icon: cpp },
    { name: "git", icon: git },
    { name: "Docker", icon: docker },
    { name: "Flask", icon: flask }, 
    { name: "TensorFlow", icon: tensorflow }, 
    { name: "PyTorch", icon: pytorch }, 
    { name: "Keras", icon: keras }, 
    { name: "D3.js", icon: d3 }, 
    { name: "Chart.js", icon: chart }, 
    { name: "OpenCV", icon: opencv }, 
    { name: "NLTK", icon: nltk }, 
    { name: "Spacy", icon: spacy }, 
];

const experiences = [
    {
        title: "AI/ML Intern",
        company_name: "Reliance Jio AICOE",
        icon: jio, // Replace with Reliance Jio logo if available
        iconBg: "#383E56",
        date: "Jun. 2024 – Aug. 2024",
        points: [
            "Engineered an end-to-end scalable language identification system, improving accuracy by 20% across 22 Indian languages, leveraging Python, PyTorch, TensorFlow, and advanced NLP techniques with automated data pipelines for data collection, preprocessing, and model optimization.",
            "Processed and cleaned 1,200+ audio files using Voice Activity Detection (VAD), denoising algorithms, and audio chunking, generating 95% clean data to enhance model training efficiency.",
            "Developed and fine-tuned language classification models using IndicWav2Vec and Hugging Face Transformers, boosting prediction accuracy by 20% and achieving an F1-score of 0.91.",
            "Conceptualized data pipelines that processed over 1,000+ hours of multilingual audio and reduced manual preprocessing time by 60%."
        ],
    },
    {
        title: "Project Trainee Intern",
        company_name: "Impetus Technologies",
        icon: impetus, 
        iconBg: "#E6DEDD",
        date: "Dec. 2021 – Jun. 2022",
        points: [
            "Architected ML-based profile detection system for 20,000+ user profiles, achieving 70% accuracy and improving detection speed by 40%.",
            "Crafted a hybrid detection system combining image-based verification (CNN for profile picture analysis) with NLP techniques (TF-IDF, BERT) to analyze chat behavior, improving model interpretability and trust.",
            "Deployed scalable solutions using Python, Scikit-learn, TensorFlow, and Flask; published findings in JETIR, detailing methodology and future extensions including biometric and document-based verification."
        ],
    },
    {
        title: "Software Developer Intern",
        company_name: "Cartesian Consulting",
        icon: cartesian,
        iconBg: "#383E56",
        date: "Jul. 2021 – Sep. 2021",
        points: [
             "Collaborated with a cross-functional team to improve demand forecasting accuracy by 10% through data preprocessing and model selection.",
             "Supported the development of a recommendation engine with 92% precision@3 using collaborative filtering and clustering techniques.",
             "Engaged with senior consultants and data scientists to optimize model performance and refine system architecture.",
  ],
},
];

const projects = [
    {
        name: "NeuroStockViz",
        description: "Developed a full-stack web-based analytics system to visualize stock correlations using neural network graphs, time-series line charts, heatmaps, and candlestick charts. Implemented dynamic filtering and real-time data updates to help financial analysts uncover complex stock relationships.",
        tags: [
            { name: "Python", color: "blue-text-gradient" },
            { name: "Flask", color: "green-text-gradient" },
            { name: "Pandas", color: "pink-text-gradient" },
            { name: "yFinance", color: "blue-text-gradient" },
            { name: "D3.js", color: "green-text-gradient" },
            { name: "Chart.js", color: "pink-text-gradient" },
            { name: "JavaScript", color: "blue-text-gradient" },
            { name: "HTML5", color: "green-text-gradient" },
            { name: "CSS3", color: "pink-text-gradient" },
            { name: "K-Means Clustering", color: "blue-text-gradient" },
        ],
        image: neurostockviz,
        source_code_link: "https://github.com/ishantkundra/NeuroStockViz",
    },
    {
        name: "CAN Bus Vehicle Diagnostic Tool",
        description: "Developed a real-time CAN bus diagnostic tool to read and display live vehicle telemetry data such as engine RPM and speed via the OBD-II port using the MCP2515 CAN controller. Implemented low-latency CAN protocol handling, bitwise ECU response parsing, and real-time data visualization on an OLED display.",
        tags: [
            { name: "CAN Protocol", color: "blue-text-gradient" },
            { name: "OBD-II", color: "green-text-gradient" },
            { name: "MCP2515", color: "pink-text-gradient" },
            { name: "Embedded C", color: "blue-text-gradient" },
            { name: "SPI", color: "green-text-gradient" },
            { name: "I2C", color: "pink-text-gradient" },
            { name: "STM32", color: "blue-text-gradient" },
            { name: "Real-Time Systems", color: "green-text-gradient" },
            { name: "Diagnostic Tools", color: "pink-text-gradient" },
        ],
        image: canbusvehiclediagnostictool,
        source_code_link: "https://github.com/ishantkundra/CAN_Bus_Vehicle_Diagnostic_Tool",
    },
    {
        name: "AI Plays Pokémon Red RL Exploration Project",
        description: "Developed a reinforcement learning framework using Proximal Policy Optimization (PPO) to train an agent to play Pokémon Red with a focus on curiosity-driven map exploration. Designed custom reward functions to encourage strategic movement and reduce inefficient behavior, using PyBoy emulator integrated with Gymnasium and Stable Baselines3.",
        tags: [
            { name: "Reinforcement Learning", color: "blue-text-gradient" },
            { name: "PPO", color: "green-text-gradient" },
            { name: "Q-Learning", color: "pink-text-gradient" },
            { name: "Python", color: "blue-text-gradient" },
            { name: "PyBoy Emulator", color: "green-text-gradient" },
            { name: "Stable Baselines3", color: "pink-text-gradient" },
            { name: "Gymnasium", color: "blue-text-gradient" },
            { name: "TensorBoard", color: "green-text-gradient" },
            { name: "Game AI", color: "pink-text-gradient" },
            { name: "Curiosity-Driven Exploration", color: "blue-text-gradient" },
        ],
        image: aiplayspokemonred,
        source_code_link: "https://github.com/ishantkundra/AI-Plays-Pok-mon-Red-RL-Exploration-Project",
    },
    {
        name: "Comparative Analysis of Loss Functions and Optimizers for CLIP Training",
        description: "Conducted an in-depth evaluation of loss functions and optimizers for CLIP model training on large-scale vision-language datasets. Developed a novel Dynamic Temperature Scaling Loss to improve retrieval accuracy with hard negatives while preventing overconfidence. Extensive experiments using PyTorch demonstrated iSogCLR + RAdam as the most effective training strategy.",
        tags: [
            { name: "CLIP", color: "blue-text-gradient" },
            { name: "Contrastive Learning", color: "green-text-gradient" },
            { name: "Vision-Language Models", color: "pink-text-gradient" },
            { name: "PyTorch", color: "blue-text-gradient" },
            { name: "Dynamic Temperature Scaling Loss", color: "green-text-gradient" },
            { name: "Self-Supervised Learning", color: "pink-text-gradient" },
            { name: "iSogCLR", color: "blue-text-gradient" },
            { name: "AdamW", color: "green-text-gradient" },
            { name: "RAdam", color: "pink-text-gradient" },
            { name: "Zero-Shot Learning", color: "blue-text-gradient" },
        ],
        image: clip,
        source_code_link: "https://github.com/ishantkundra/-Comparative-Analysis-of-Loss-Functions-and-Optimizers-for-CLIP-Training",
    },
    {
        name: "RTOS Task Scheduler full",
        description: "Designed and implemented a real-time task scheduler using FreeRTOS on the STM32F407VG board with multitasking capabilities. Developed three concurrent tasks for LED toggling, ADC sensor data reading, and UART communication, demonstrating task prioritization, preemptive scheduling, and non-blocking execution.",
        tags: [
            { name: "FreeRTOS", color: "blue-text-gradient" },
            { name: "STM32F407VG", color: "green-text-gradient" },
            { name: "Embedded C", color: "pink-text-gradient" },
            { name: "RTOS", color: "blue-text-gradient" },
            { name: "STM32CubeIDE", color: "green-text-gradient" },
            { name: "UART", color: "pink-text-gradient" },
            { name: "ADC", color: "blue-text-gradient" },
            { name: "GPIO", color: "green-text-gradient" },
            { name: "ARM Cortex-M4", color: "pink-text-gradient" },
            { name: "HAL Drivers", color: "blue-text-gradient" },
        ],
        image: guiproj, // Replace with RTOS Task Scheduler project image later
        source_code_link: "https://github.com/ishantkundra/RTOS_Task_Scheduler_Full",
    },
    {
        name: "Smart Greenhouse Automation",
        description: "Built an IoT-based greenhouse monitoring and automation system using ESP32 to manage environmental conditions in real-time. Integrated DHT22 and soil moisture sensors, utilized MQTT protocol for wireless communication, and developed actuator control logic to maintain optimal plant conditions.",
        tags: [
            { name: "ESP32", color: "blue-text-gradient" },
            { name: "IoT", color: "green-text-gradient" },
            { name: "MQTT", color: "pink-text-gradient" },
            { name: "PubSubClient", color: "blue-text-gradient" },
            { name: "DHT22", color: "green-text-gradient" },
            { name: "Soil Moisture Sensor", color: "pink-text-gradient" },
            { name: "Arduino IDE", color: "blue-text-gradient" },
            { name: "Embedded C++", color: "green-text-gradient" },
            { name: "HiveMQ", color: "pink-text-gradient" },
            { name: "Real-Time Systems", color: "blue-text-gradient" },
        ],
        image: greenhouse,
        source_code_link: "https://github.com/ishantkundra/Smart_Greenhouse_Automation",
    },
    {
        name: "Student Apartment Recommender Chatbot for Texas A&M University",
        description: "Developed and deployed a rule-based NLP-powered chatbot to recommend student housing near Texas A&M University based on user preferences like price, location, and amenities. Built using Python, Flask, and spaCy, the system parses natural language input and dynamically filters a curated apartment dataset to deliver personalized housing recommendations.",
        tags: [
            { name: "Natural Language Processing", color: "blue-text-gradient" },
            { name: "Recommender Systems", color: "green-text-gradient" },
            { name: "Chatbot Development", color: "pink-text-gradient" },
            { name: "Python", color: "blue-text-gradient" },
            { name: "Flask", color: "green-text-gradient" },
            { name: "spaCy", color: "pink-text-gradient" },
            { name: "HTML", color: "blue-text-gradient" },
            { name: "CSS", color: "green-text-gradient" },
            { name: "JavaScript", color: "pink-text-gradient" },
            { name: "Full-Stack Development", color: "blue-text-gradient" },
        ],
        image: tamuchatbot,
        source_code_link: "https://github.com/ishantkundra/Student-Apartment-Recommender-Chatbot-for-Texas-A-M-University",
    },
    {
        name: "Interpretable AI for Employee Turnover Prediction using LIME and SHAP",
        description: "Developed a Random Forest model to predict employee turnover with a focus on model interpretability and fairness. Applied LIME and SHAP to provide both local and global explanations, ensuring transparent decision-making. Conducted bias analysis across demographic groups to evaluate ethical deployment in HR analytics.",
        tags: [
            { name: "Explainable AI", color: "blue-text-gradient" },
            { name: "SHAP", color: "green-text-gradient" },
            { name: "LIME", color: "pink-text-gradient" },
            { name: "Random Forest", color: "blue-text-gradient" },
            { name: "Python", color: "green-text-gradient" },
            { name: "Scikit-learn", color: "pink-text-gradient" },
            { name: "Pandas", color: "blue-text-gradient" },
            { name: "HR Analytics", color: "green-text-gradient" },
            { name: "Fairness in AI", color: "pink-text-gradient" },
            { name: "Feature Attribution", color: "blue-text-gradient" },
        ],
        image: limeandshap,
        source_code_link: "https://github.com/ishantkundra/Interpretable-AI-for-Employee-Turnover-Prediction-using-LIME-SHAP",
    },
    {
        name: "Bias Detection in AI: Age and Gender Fairness in Employee Attrition Prediction",
        description: "Conducted a fairness audit on a Random Forest model for employee attrition prediction, focusing on bias detection related to age and gender. Used calibration curves and error rate analysis to uncover disparities, demonstrating the importance of responsible AI deployment and fairness evaluation in HR applications.",
        tags: [
            { name: "Fairness in AI", color: "blue-text-gradient" },
            { name: "Bias Detection", color: "green-text-gradient" },
            { name: "Random Forest", color: "pink-text-gradient" },
            { name: "Calibration Curves", color: "blue-text-gradient" },
            { name: "Python", color: "green-text-gradient" },
            { name: "Scikit-learn", color: "pink-text-gradient" },
            { name: "Pandas", color: "blue-text-gradient" },
            { name: "HR Analytics", color: "green-text-gradient" },
            { name: "Responsible AI", color: "pink-text-gradient" },
            { name: "Human-AI Interaction", color: "blue-text-gradient" },
        ],
        image: biasdetection,
        source_code_link: "https://github.com/ishantkundra/Bias-Detection-in-AI-Age-and-Gender-Fairness-in-Employee-Attrition-Prediction",
    },
    {
        name: "Skhedule.com",
        description: "Led frontend development and co-developed backend systems for Skhedule.com, a full-stack event management web platform. Built responsive UI for event creation, guest management, RSVP tracking, and smart reminders. Developed backend REST APIs using Flask to manage event metadata, guest queues, and Google Calendar integration.",
        tags: [
            { name: "Full-Stack Development", color: "blue-text-gradient" },
            { name: "Flask", color: "green-text-gradient" },
            { name: "REST API", color: "pink-text-gradient" },
            { name: "Python", color: "blue-text-gradient" },
            { name: "HTML", color: "green-text-gradient" },
            { name: "CSS", color: "pink-text-gradient" },
            { name: "JavaScript", color: "blue-text-gradient" },
            { name: "Event Management Systems", color: "green-text-gradient" },
            { name: "Google Calendar Integration", color: "pink-text-gradient" },
            { name: "Agile", color: "blue-text-gradient" },
        ],
        image: skhedule,
        source_code_link: "https://github.com/SwIRL-CSCE-606/SwIRL-CSCE-606",
    },
    {
        name: "Transformer Based Sentiment Analysis on Yelp Reviews",
        description: "Built a custom Transformer model from scratch using PyTorch to classify Yelp review sentiments into Positive, Neutral, and Negative. Designed a complete Transformer architecture with positional embeddings, multi-head attention, and custom training logic, achieving strong performance on real-world sentiment analysis.",
        tags: [
            { name: "Transformers", color: "blue-text-gradient" },
            { name: "Sentiment Analysis", color: "green-text-gradient" },
            { name: "Multi-Head Attention", color: "pink-text-gradient" },
            { name: "Deep Learning", color: "blue-text-gradient" },
            { name: "PyTorch", color: "green-text-gradient" },
            { name: "NLP", color: "pink-text-gradient" },
            { name: "Text Classification", color: "blue-text-gradient" },
            { name: "Hyperparameter Tuning", color: "green-text-gradient" },
            { name: "Yelp Dataset", color: "pink-text-gradient" },
            { name: "Python", color: "blue-text-gradient" },
        ],
        image: yelp,
        source_code_link: "https://github.com/ishantkundra/Transformer-Based-Sentiment-Analysis-on-Yelp-Reviews",
    },
    {
        name: "Regression Modeling with Pokémon GO and Baseball Datasets",
        description: "Built and evaluated multiple regression models using Pokémon GO and baseball player performance datasets. Applied OLS linear regression, Ridge, and Lasso with cross-validation, feature scaling, and visualizations to predict in-game performance and player salaries, focusing on model interpretability and regularization trade-offs.",
        tags: [
            { name: "Regression Modeling", color: "blue-text-gradient" },
            { name: "Linear Regression", color: "green-text-gradient" },
            { name: "Ridge", color: "pink-text-gradient" },
            { name: "Lasso", color: "blue-text-gradient" },
            { name: "Cross-Validation", color: "green-text-gradient" },
            { name: "Python", color: "pink-text-gradient" },
            { name: "Scikit-learn", color: "blue-text-gradient" },
            { name: "Pandas", color: "green-text-gradient" },
            { name: "NumPy", color: "pink-text-gradient" },
            { name: "Matplotlib", color: "blue-text-gradient" },
        ],
        image: pokemongoandbaseball,
        source_code_link: "https://github.com/ishantkundra/-Regression-Modeling-with-Pok-mon-GO-Baseball-Datasets",
    },
    {
        name: "NLP Chatbot for Industrial Safety Risk Classification and Recommendation",
        description: "Developed an AI-powered chatbot that classifies safety incidents from textual accident descriptions and provides real-time risk feedback for the metals & mining industry. Integrated full-cycle NLP workflows, ML/DL classifiers, and deployed the best-performing model via a Flask-based chatbot interface.",
        tags: [
            { name: "NLP", color: "blue-text-gradient" },
            { name: "Chatbot", color: "green-text-gradient" },
            { name: "LSTM", color: "pink-text-gradient" },
            { name: "RNN", color: "blue-text-gradient" },
            { name: "Flask", color: "green-text-gradient" },
            { name: "TF-IDF", color: "pink-text-gradient" },
            { name: "Word2Vec", color: "blue-text-gradient" },
            { name: "GloVe", color: "green-text-gradient" },
            { name: "SMOTE", color: "pink-text-gradient" },
            { name: "Deep Learning", color: "blue-text-gradient" },
        ],
        image: uta, // UTA project image
        source_code_link: "https://github.com/ishantkundra/NLP-Chatbot-for-Industrial-Safety-Risk-Classification-and-Recommendation",
    },
    {
        name: "End to End NLP Pipeline for Blog Topic Classification and Sentiment Sarcasm Detection",
        description: "Built an end-to-end NLP pipeline for blog topic prediction, sentiment analysis, and sarcasm detection using both traditional ML and deep learning. Developed multi-label classifiers on the Blog Authorship Corpus, LSTM-based sentiment models on IMDB, and Bi-LSTM sarcasm detection using headlines from The Onion and Huffington Post.",
        tags: [
            { name: "NLP", color: "blue-text-gradient" },
            { name: "Sentiment Analysis", color: "green-text-gradient" },
            { name: "Sarcasm Detection", color: "pink-text-gradient" },
            { name: "LSTM", color: "blue-text-gradient" },
            { name: "Bi-LSTM", color: "green-text-gradient" },
            { name: "GloVe", color: "pink-text-gradient" },
            { name: "TF-IDF", color: "blue-text-gradient" },
            { name: "Deep Learning", color: "green-text-gradient" },
            { name: "Python", color: "pink-text-gradient" },
            { name: "TensorFlow", color: "blue-text-gradient" },
        ],
        image: uta, // UTA project image
        source_code_link: "https://github.com/ishantkundra/End-to-End-NLP-Pipeline-for-Blog-Topic-Classification-and-Sentiment-Sarcasm-Detection",
    },
    {
        name: "End to End Computer Vision Systems for Image Classification and Face Recognition",
        description: "Designed and implemented deep learning-based computer vision systems for image classification and face recognition. Developed custom CNNs, used MobileNet and U-Net for face detection, and built a facial recognition pipeline using VGG-Face embeddings, PCA, and SVM to achieve high precision in identity classification.",
        tags: [
            { name: "Computer Vision", color: "blue-text-gradient" },
            { name: "CNN", color: "green-text-gradient" },
            { name: "Face Detection", color: "pink-text-gradient" },
            { name: "Face Recognition", color: "blue-text-gradient" },
            { name: "Transfer Learning", color: "green-text-gradient" },
            { name: "MobileNet", color: "pink-text-gradient" },
            { name: "U-Net", color: "blue-text-gradient" },
            { name: "VGG-Face", color: "green-text-gradient" },
            { name: "PCA", color: "pink-text-gradient" },
            { name: "SVM", color: "blue-text-gradient" },
        ],
        image: uta, // UTA project image
        source_code_link: "https://github.com/ishantkundra/End-to-End-Computer-Vision-Systems-for-Image-Classification-and-Face-Recognition",
    },
    {
        name: "Signal Quality Classification and Digit Recognition using Deep Learning",
        description: "Developed and trained deep learning models for signal quality assessment using sensor data and digit recognition using the SVHN dataset. Built neural network classifiers and CNNs using TensorFlow and Keras, applied extensive preprocessing, and visualized learning curves to fine-tune performance across both structured and unstructured data tasks.",
        tags: [
            { name: "Deep Learning", color: "blue-text-gradient" },
            { name: "Neural Networks", color: "green-text-gradient" },
            { name: "Convolutional Neural Networks (CNN)", color: "pink-text-gradient" },
            { name: "TensorFlow", color: "blue-text-gradient" },
            { name: "Python", color: "green-text-gradient" },
            { name: "Data Preprocessing", color: "pink-text-gradient" },
            { name: "Image Classification", color: "blue-text-gradient" },
            { name: "Model Tuning", color: "green-text-gradient" },
            { name: "h5py", color: "pink-text-gradient" },
            { name: "SVHN Dataset", color: "blue-text-gradient" },
        ],
        image: uta, // UTA project image
        source_code_link: "https://github.com/ishantkundra/Signal-Quality-Classification-and-Digit-Recognition-using-Deep-Learning",
    },
    {
        name: "Smartphone Recommendation System using Popularity and Collaborative Filtering",
        description: "Developed a dual-mode smartphone recommendation system combining popularity-based and collaborative filtering techniques. Aggregated and cleaned user review data, implemented SVD and kNNWithMeans models using the Surprise library, and delivered personalized top-5 product recommendations for test users with business insights on model performance.",
        tags: [
            { name: "Recommendation Systems", color: "blue-text-gradient" },
            { name: "Collaborative Filtering", color: "green-text-gradient" },
            { name: "SVD", color: "pink-text-gradient" },
            { name: "kNNWithMeans", color: "blue-text-gradient" },
            { name: "Popularity-Based Modeling", color: "green-text-gradient" },
            { name: "Surprise Library", color: "pink-text-gradient" },
            { name: "Python", color: "blue-text-gradient" },
            { name: "Pandas", color: "green-text-gradient" },
            { name: "NumPy", color: "pink-text-gradient" },
            { name: "Exploratory Data Analysis (EDA)", color: "blue-text-gradient" },
        ],
        image: uta, // UTA project image
        source_code_link: "https://github.com/ishantkundra/Smartphone-Recommendation-System-using-Popularity-and-Collaborative-Filtering",
    },
    {
        name: "Feature Engineering and Model Optimization for Semiconductor Yield Prediction",
        description: "Developed an end-to-end supervised learning pipeline to predict pass/fail outcomes in semiconductor manufacturing using high-dimensional sensor data. Focused on feature engineering, dimensionality reduction, model tuning, and classification with Logistic Regression, SVM, Random Forest, and XGBoost. Delivered a production-ready model with comprehensive performance evaluation.",
        tags: [
            { name: "Feature Engineering", color: "blue-text-gradient" },
            { name: "Model Tuning", color: "green-text-gradient" },
            { name: "Dimensionality Reduction", color: "pink-text-gradient" },
            { name: "GridSearchCV", color: "blue-text-gradient" },
            { name: "Cross-Validation", color: "green-text-gradient" },
            { name: "XGBoost", color: "pink-text-gradient" },
            { name: "Random Forest", color: "blue-text-gradient" },
            { name: "SVM", color: "green-text-gradient" },
            { name: "Logistic Regression", color: "pink-text-gradient" },
            { name: "Python", color: "blue-text-gradient" },
        ],
        image: uta, // UTA project image
        source_code_link: "https://github.com/ishantkundra/Feature-Engineering-and-Model-Optimization-for-Semiconductor-Yield-Prediction",
    },
    {
        name: "Unsupervised Learning for Vehicle Segmentation and Silhouette Classification",
        description: "Designed and implemented a two-part unsupervised learning project to extract patterns and insights from unlabeled data using clustering and dimensionality reduction techniques. Applied K-Means clustering for automotive segmentation and used PCA with SVM for image-based vehicle silhouette classification, demonstrating performance improvements with dimensionality reduction.",
        tags: [
            { name: "Unsupervised Learning", color: "blue-text-gradient" },
            { name: "K-Means Clustering", color: "green-text-gradient" },
            { name: "PCA", color: "pink-text-gradient" },
            { name: "SVM", color: "blue-text-gradient" },
            { name: "Dimensionality Reduction", color: "green-text-gradient" },
            { name: "Feature Engineering", color: "pink-text-gradient" },
            { name: "Python", color: "blue-text-gradient" },
            { name: "Pandas", color: "green-text-gradient" },
            { name: "NumPy", color: "pink-text-gradient" },
            { name: "Image Classification", color: "blue-text-gradient" },
        ],
        image: uta, // UTA project image
        source_code_link: "https://github.com/ishantkundra/Unsupervised-Learning-Project-Car-Clustering-Vehicle-Classification",
    },
    {
        name: "Customer Churn Prediction and AutoML Workflow using Ensemble Techniques",
        description: "Built and optimized an ensemble-based machine learning system to predict customer churn in the telecom sector, while also developing a modularized AutoML pipeline to automate model selection for varied datasets. Developed a production-ready ML pipeline with modular, reusable components, applying XGBoost for high-accuracy churn prediction and building an automated workflow for structured datasets.",
        tags: [
            { name: "Ensemble Learning", color: "blue-text-gradient" },
            { name: "XGBoost", color: "green-text-gradient" },
            { name: "AutoML", color: "pink-text-gradient" },
            { name: "Model Selection", color: "blue-text-gradient" },
            { name: "Feature Engineering", color: "green-text-gradient" },
            { name: "Data Cleaning", color: "pink-text-gradient" },
            { name: "Normalization", color: "blue-text-gradient" },
            { name: "Pickle", color: "green-text-gradient" },
            { name: "Python", color: "pink-text-gradient" },
            { name: "Pandas", color: "blue-text-gradient" },
        ],
        image: uta, // UTA project image
        source_code_link: "https://github.com/ishantkundra/Customer-Churn-Prediction-and-AutoML-Workflow-using-Ensemble-Techniques",
    },
    {
        name: "Supervised Learning Project",
        description: "Developed and implemented supervised learning models for medical diagnosis using biomechanical data and for credit card loan prediction using banking datasets. Applied KNN, Logistic Regression, and SVM classifiers with extensive data preprocessing, feature engineering, SMOTE balancing, and hyperparameter tuning to achieve significant accuracy improvements across both domains.",
        tags: [
            { name: "Supervised Learning", color: "blue-text-gradient" },
            { name: "Classification", color: "green-text-gradient" },
            { name: "KNN", color: "pink-text-gradient" },
            { name: "Support Vector Machine (SVM)", color: "blue-text-gradient" },
            { name: "Logistic Regression", color: "green-text-gradient" },
            { name: "SMOTE", color: "pink-text-gradient" },
            { name: "Data Preprocessing", color: "blue-text-gradient" },
            { name: "Model Evaluation & Optimization", color: "green-text-gradient" },
            { name: "Python", color: "pink-text-gradient" },
            { name: "Exploratory Data Analysis (EDA)", color: "blue-text-gradient" },
        ],
        image: uta, // UTA project image
        source_code_link: "https://github.com/ishantkundra/Supervised_Learning_Project",
    },
    {
        name: "Applied Statistics Project",
        description: "Completed a multi-part data analysis project focusing on statistical inference, hypothesis testing, and data visualization across three business domains: quality control, sports analytics, and startup success prediction. Conducted confidence interval calculations, probability distributions, sports performance hypothesis testing, and A/B testing for startup survival analysis using Python, Pandas, NumPy, Matplotlib, and Seaborn.",
        tags: [
            { name: "Python", color: "blue-text-gradient" },
            { name: "Data Analysis", color: "green-text-gradient" },
            { name: "Statistical Inference", color: "pink-text-gradient" },
            { name: "Hypothesis Testing", color: "blue-text-gradient" },
            { name: "A/B Testing", color: "green-text-gradient" },
            { name: "Exploratory Data Analysis (EDA)", color: "pink-text-gradient" },
            { name: "Data Visualization", color: "blue-text-gradient" },
            { name: "Pandas", color: "green-text-gradient" },
            { name: "NumPy", color: "pink-text-gradient" },
            { name: "Matplotlib", color: "blue-text-gradient" },
        ],
        image: uta, // UTA project image
        source_code_link: "https://github.com/ishantkundra/Applied-Statistics-Project",
    },
];

export { services, technologies, experiences, projects, rm };